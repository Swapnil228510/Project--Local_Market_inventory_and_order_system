package com.app.service;

import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.app.dao.UserDao;
import com.app.dto.RegisterUserDto;
import com.app.dto.SignInDto;
import com.app.pojos.Role;
import com.app.pojos.User;

@Service
@Transactional
public class UserServiceImpl implements UserService {
	
	@Autowired
	private UserDao userdao;
	
	@Autowired
	private ModelMapper mapper;
	
//	@Autowired
//	private PasswordEncoder passwordEncoder;
	
	@Override
	public RegisterUserDto registerUser(RegisterUserDto registerRequest) {
		User user = mapper.map(registerRequest, User.class);
		
//		user.setPassword(passwordEncoder.encode(registerRequest.getPassword()));
		user.setRole(Role.CUSTOMER);
		
		User savedUser = userdao.save(user);
		
		return mapper.map(savedUser,RegisterUserDto.class);
	}

	@Override
	public SignInDto signInUser(SignInDto signInRequest) {
//		SignInDto userSignin = null;
		 User user = mapper.map(signInRequest, User.class);
		
		Optional<signInUser> signinUser =  userdao.findByemail(user.getEmail()).orElse(null);
		return mapper.map(signinUser, SignInDto.class);
	}

}
