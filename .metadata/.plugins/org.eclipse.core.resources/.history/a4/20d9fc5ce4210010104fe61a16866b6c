package com.app.service;

import java.util.List;
import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.app.dao.UserDao;
import com.app.dto.ApiResponse;
import com.app.dto.RegisterUserDto;
import com.app.dto.SignInDto;
import com.app.exception.ResourceNotFoundException;
import com.app.pojos.Role;
import com.app.pojos.User;

@Service
@Transactional
public class UserServiceImpl implements UserService {
	
	@Autowired
	private UserDao userdao;
	
	@Autowired
	private ModelMapper mapper;
	
//	@Autowired
//	private PasswordEncoder passwordEncoder;
	User user;
	@Override
	public RegisterUserDto registerUser(RegisterUserDto registerRequest) {
		User user = mapper.map(registerRequest, User.class);
		
//		user.setPassword(passwordEncoder.encode(registerRequest.getPassword()));
		user.setRole(Role.CUSTOMER);
		
		User savedUser = userdao.save(user);

		return mapper.map(savedUser,RegisterUserDto.class);
	}


	@Override
	public User signInUser(String email, String password) {
		user = userdao.findByEmailAndPassword(email, password).orElseThrow(()-> new RuntimeException("User needs to register"));
		return user;
	}


	@Override
	public User getById(Long id) {
		user = userdao.findById(id).orElseThrow(()->new ResourceNotFoundException("Given Id is not present"));
		System.out.println("User is found "+user);
		return user;
	}


	@Override
	public List<User> getAllUser() {
		List<User> list = userdao.findAll();
		list.forEach(System.out::println);
		return list;
	}

}
